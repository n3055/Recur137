# Generated by Django 3.2.25 on 2025-08-15 06:32

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ComplianceFramework',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('version', models.CharField(max_length=20)),
                ('description', models.TextField()),
                ('requirements', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='ScanSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('session_id', models.CharField(max_length=100, unique=True)),
                ('contract_name', models.CharField(max_length=255)),
                ('contract_hash', models.CharField(max_length=64)),
                ('scan_timestamp', models.DateTimeField(auto_now_add=True)),
                ('scan_duration', models.FloatField(default=0.0)),
                ('risk_score', models.FloatField(default=0.0)),
                ('severity_level', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('CRITICAL', 'Critical')], default='LOW', max_length=20)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('RUNNING', 'Running'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed')], default='PENDING', max_length=20)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-scan_timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Vulnerability',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('vulnerability_type', models.CharField(max_length=100)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('severity', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('CRITICAL', 'Critical')], max_length=20)),
                ('confidence', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High')], max_length=20)),
                ('cwe_id', models.CharField(blank=True, max_length=20)),
                ('cvss_score', models.FloatField(blank=True, null=True)),
                ('line_number', models.IntegerField(blank=True, null=True)),
                ('code_snippet', models.TextField(blank=True)),
                ('remediation', models.TextField()),
                ('references', models.TextField(blank=True)),
                ('detected_by', models.CharField(max_length=50)),
                ('scan_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vulnerabilities', to='scanner.scansession')),
            ],
            options={
                'ordering': ['-severity', '-cvss_score'],
            },
        ),
        migrations.CreateModel(
            name='SecurityMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_vulnerabilities', models.IntegerField(default=0)),
                ('critical_vulnerabilities', models.IntegerField(default=0)),
                ('high_vulnerabilities', models.IntegerField(default=0)),
                ('medium_vulnerabilities', models.IntegerField(default=0)),
                ('low_vulnerabilities', models.IntegerField(default=0)),
                ('code_complexity', models.FloatField(default=0.0)),
                ('cyclomatic_complexity', models.IntegerField(default=0)),
                ('maintainability_index', models.FloatField(default=0.0)),
                ('security_score', models.FloatField(default=0.0)),
                ('gas_optimization_score', models.FloatField(default=0.0)),
                ('compliance_score', models.FloatField(default=0.0)),
                ('scan_session', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='security_metrics', to='scanner.scansession')),
            ],
        ),
        migrations.CreateModel(
            name='ComplianceCheck',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requirement', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('PASS', 'Pass'), ('FAIL', 'Fail'), ('PARTIAL', 'Partial'), ('NOT_APPLICABLE', 'Not Applicable')], max_length=20)),
                ('details', models.TextField()),
                ('evidence', models.TextField(blank=True)),
                ('framework', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scanner.complianceframework')),
                ('scan_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='compliance_checks', to='scanner.scansession')),
            ],
        ),
        migrations.CreateModel(
            name='AuditTrail',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('action', models.CharField(max_length=100)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user_agent', models.TextField(blank=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('details', models.TextField(blank=True)),
                ('risk_assessment', models.TextField(blank=True)),
                ('scan_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='audit_trails', to='scanner.scansession')),
            ],
        ),
    ]
